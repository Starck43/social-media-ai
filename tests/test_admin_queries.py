"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ admin views
"""
import asyncio
from app.models import Source, SourceUserRelationship
from app.models.managers.base_manager import prefetch


async def test_source_list_query():
    """–¢–µ—Å—Ç list_query –¥–ª—è SourceAdmin"""
    print("\n" + "="*80)
    print("–¢–ï–°–¢: SourceAdmin.list_query()")
    print("="*80)
    
    try:
        # –ò–º–∏—Ç–∞—Ü–∏—è list_query –∏–∑ SourceAdmin
        qs = Source.objects.prefetch_related(
            "monitored_users",
            "tracked_in_sources",
        )
        stmt = await qs._build_statement()
        
        print("‚úÖ list_query –ø–æ—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"   –¢–∏–ø: {type(stmt)}")
        print(f"   SQL –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —Å prefetch_related –¥–ª—è:")
        print(f"   - monitored_users")
        print(f"   - tracked_in_sources")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


async def test_source_details_query():
    """–¢–µ—Å—Ç details_query –¥–ª—è SourceAdmin"""
    print("\n" + "="*80)
    print("–¢–ï–°–¢: SourceAdmin.details_query()")
    print("="*80)
    
    try:
        # –ò–º–∏—Ç–∞—Ü–∏—è details_query –∏–∑ SourceAdmin
        pk = 1  # –¢–µ—Å—Ç–æ–≤—ã–π ID
        
        # –°–æ–∑–¥–∞–µ–º prefetch —Å —Ñ–∏–ª—å—Ç—Ä–æ–º (–∏—Å–∫–ª—é—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∏—Å—Ç–æ—á–Ω–∏–∫)
        monitored_prefetch = prefetch(
            "monitored_users",
            filters={"id__ne": pk}  # –ò—Å–ø–æ–ª—å–∑—É–µ–º lookup __ne (not equal)
        )
        
        # –°—Ç—Ä–æ–∏–º –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ QuerySet
        qs = Source.objects.prefetch_related(
            monitored_prefetch,
            "tracked_in_sources",
            "analytics",
            "platform",
        ).filter(id=pk)
        
        stmt = await qs._build_statement()
        
        print("‚úÖ details_query –ø–æ—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"   –¢–∏–ø: {type(stmt)}")
        print(f"   SQL –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —Å:")
        print(f"   - filter(id={pk})")
        print(f"   - prefetch monitored_users —Å —Ñ–∏–ª—å—Ç—Ä–æ–º id__ne={pk}")
        print(f"   - prefetch tracked_in_sources, analytics, platform")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


async def test_relationship_list_query():
    """–¢–µ—Å—Ç list_query –¥–ª—è SourceUserRelationshipAdmin"""
    print("\n" + "="*80)
    print("–¢–ï–°–¢: SourceUserRelationshipAdmin.list_query()")
    print("="*80)
    
    try:
        # –ò–º–∏—Ç–∞—Ü–∏—è list_query –∏–∑ SourceUserRelationshipAdmin
        qs = (SourceUserRelationship.objects
            .select_related("source", "user")
            .prefetch_related("source.platform", "user.platform")
        )
        stmt = await qs._build_statement()
        
        print("‚úÖ list_query –ø–æ—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"   –¢–∏–ø: {type(stmt)}")
        print(f"   SQL –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —Å:")
        print(f"   - select_related: source, user (JOIN)")
        print(f"   - prefetch_related: source.platform, user.platform (–æ—Ç–¥–µ–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã)")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


async def test_prefetch_with_filters():
    """–¢–µ—Å—Ç prefetch —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏"""
    print("\n" + "="*80)
    print("–¢–ï–°–¢: Prefetch —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ lookups")
    print("="*80)
    
    test_cases = [
        ("id__ne", 1, "not equal"),
        ("is_active", True, "equality"),
        ("id__in", [1, 2, 3], "in list"),
        ("name__contains", "test", "contains"),
    ]
    
    for lookup, value, description in test_cases:
        try:
            p = prefetch("monitored_users", filters={lookup: value})
            print(f"‚úÖ prefetch —Å {description}: {lookup}={value}")
        except Exception as e:
            print(f"‚ùå prefetch —Å {description}: {e}")


async def test_queryset_chaining():
    """–¢–µ—Å—Ç —Ü–µ–ø–æ—á–µ–∫ QuerySet"""
    print("\n" + "="*80)
    print("–¢–ï–°–¢: –¶–µ–ø–æ—á–∫–∏ QuerySet")
    print("="*80)
    
    try:
        # –¶–µ–ø–æ—á–∫–∞ –∫–∞–∫ –≤ views
        qs = (Source.objects
            .prefetch_related("platform")
            .filter(is_active=True)
            .order_by(Source.name)
            .limit(10)
        )
        stmt = await qs._build_statement()
        
        print("‚úÖ –¶–µ–ø–æ—á–∫–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        print(f"   prefetch_related -> filter -> order_by -> limit")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ü–µ–ø–æ—á–∫–µ: {e}")
        import traceback
        traceback.print_exc()


async def test_comparison_old_vs_new():
    """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∏ –Ω–æ–≤–æ–≥–æ API"""
    print("\n" + "="*80)
    print("–°–†–ê–í–ù–ï–ù–ò–ï: –°—Ç–∞—Ä—ã–π vs –ù–æ–≤—ã–π API")
    print("="*80)
    
    print("\n‚ùå –°–¢–ê–†–´–ô API (–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–µ–ø–µ—Ä—å):")
    print("   Source.objects.prefetch_related(...).where(id=pk).build_select()")
    print("   - –ú–µ—Ç–æ–¥—ã where() –∏ build_select() —É–¥–∞–ª–µ–Ω—ã")
    
    print("\n‚úÖ –ù–û–í–´–ô API (—Ä–∞–±–æ—Ç–∞–µ—Ç):")
    print("   qs = Source.objects.prefetch_related(...).filter(id=pk)")
    print("   stmt = await qs._build_statement()")
    print("   - –ò—Å–ø–æ–ª—å–∑—É–µ–º filter() –≤–º–µ—Å—Ç–æ where()")
    print("   - –ò—Å–ø–æ–ª—å–∑—É–µ–º _build_statement() –≤–º–µ—Å—Ç–æ build_select()")
    print("   - QuerySet –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ü–µ–ø–æ—á–∫–∏")


async def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
    print("\n")
    print("üß™" * 40)
    print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–• ADMIN QUERIES")
    print("üß™" * 40)
    
    await test_source_list_query()
    await test_source_details_query()
    await test_relationship_list_query()
    await test_prefetch_with_filters()
    await test_queryset_chaining()
    await test_comparison_old_vs_new()
    
    print("\n" + "="*80)
    print("‚úÖ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´")
    print("="*80)
    print("\n–ò–ó–ú–ï–ù–ï–ù–ò–Ø –í views.py:")
    print("  1. ‚úÖ –ó–∞–º–µ–Ω–µ–Ω import: Prefetch -> prefetch")
    print("  2. ‚úÖ list_query —Å—Ç–∞–ª async")
    print("  3. ‚úÖ –ó–∞–º–µ–Ω–µ–Ω .build_select() –Ω–∞ await qs._build_statement()")
    print("  4. ‚úÖ –ó–∞–º–µ–Ω–µ–Ω .where(id=pk) –Ω–∞ .filter(id=pk)")
    print("  5. ‚úÖ Prefetch() –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ prefetch() —Å filters")
    print("  6. ‚úÖ queryset=Source.objects.exclude() –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ filters={'id__ne': pk}")
    print("  7. ‚úÖ –í–ª–æ–∂–µ–Ω–Ω—ã–µ select_related –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ prefetch_related")
    print("\n")


if __name__ == "__main__":
    asyncio.run(main())
